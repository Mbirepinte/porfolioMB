{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/home/michael/6-Projets perso/portfolioMB/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"/home/michael/6-Projets perso/portfolioMB/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/home/michael/6-Projets perso/portfolioMB/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/home/michael/6-Projets perso/portfolioMB/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OutOfCanvasUpdater = void 0;\nvar Utils_1 = require(\"./Utils\");\nvar Utils_2 = require(\"../../Utils/Utils\");\nvar OutOfCanvasUpdater = /*#__PURE__*/function () {\n  function OutOfCanvasUpdater(container) {\n    _classCallCheck(this, OutOfCanvasUpdater);\n    this.container = container;\n  }\n  _createClass(OutOfCanvasUpdater, [{\n    key: \"init\",\n    value: function init() {}\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return !particle.destroyed && !particle.spawning;\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      var _a, _b, _c, _d;\n      var outModes = particle.options.move.outModes;\n      this.updateOutMode(particle, delta, (_a = outModes.bottom) !== null && _a !== void 0 ? _a : outModes.default, \"bottom\");\n      this.updateOutMode(particle, delta, (_b = outModes.left) !== null && _b !== void 0 ? _b : outModes.default, \"left\");\n      this.updateOutMode(particle, delta, (_c = outModes.right) !== null && _c !== void 0 ? _c : outModes.default, \"right\");\n      this.updateOutMode(particle, delta, (_d = outModes.top) !== null && _d !== void 0 ? _d : outModes.default, \"top\");\n    }\n  }, {\n    key: \"updateOutMode\",\n    value: function updateOutMode(particle, delta, outMode, direction) {\n      switch (outMode) {\n        case \"bounce\":\n        case \"bounce-vertical\":\n        case \"bounce-horizontal\":\n        case \"bounceVertical\":\n        case \"bounceHorizontal\":\n        case \"split\":\n          this.bounce(particle, delta, direction, outMode);\n          break;\n        case \"destroy\":\n          this.destroy(particle, direction);\n          break;\n        case \"out\":\n          this.out(particle, direction);\n          break;\n        case \"none\":\n        default:\n          this.none(particle, direction);\n          break;\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy(particle, direction) {\n      var container = this.container;\n      if ((0, Utils_2.isPointInside)(particle.position, container.canvas.size, particle.getRadius(), direction)) {\n        return;\n      }\n      container.particles.remove(particle, undefined, true);\n    }\n  }, {\n    key: \"out\",\n    value: function out(particle, direction) {\n      var container = this.container;\n      if ((0, Utils_2.isPointInside)(particle.position, container.canvas.size, particle.getRadius(), direction)) {\n        return;\n      }\n      var wrap = particle.options.move.warp,\n        canvasSize = container.canvas.size,\n        newPos = {\n          bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n          left: -particle.getRadius() - particle.offset.x,\n          right: canvasSize.width + particle.getRadius() + particle.offset.x,\n          top: -particle.getRadius() - particle.offset.y\n        },\n        sizeValue = particle.getRadius(),\n        nextBounds = (0, Utils_2.calculateBounds)(particle.position, sizeValue);\n      if (direction === \"right\" && nextBounds.left > canvasSize.width + particle.offset.x) {\n        particle.position.x = newPos.left;\n        particle.initialPosition.x = particle.position.x;\n        if (!wrap) {\n          particle.position.y = Math.random() * canvasSize.height;\n          particle.initialPosition.y = particle.position.y;\n        }\n      } else if (direction === \"left\" && nextBounds.right < -particle.offset.x) {\n        particle.position.x = newPos.right;\n        particle.initialPosition.x = particle.position.x;\n        if (!wrap) {\n          particle.position.y = Math.random() * canvasSize.height;\n          particle.initialPosition.y = particle.position.y;\n        }\n      }\n      if (direction === \"bottom\" && nextBounds.top > canvasSize.height + particle.offset.y) {\n        if (!wrap) {\n          particle.position.x = Math.random() * canvasSize.width;\n          particle.initialPosition.x = particle.position.x;\n        }\n        particle.position.y = newPos.top;\n        particle.initialPosition.y = particle.position.y;\n      } else if (direction === \"top\" && nextBounds.bottom < -particle.offset.y) {\n        if (!wrap) {\n          particle.position.x = Math.random() * canvasSize.width;\n          particle.initialPosition.x = particle.position.x;\n        }\n        particle.position.y = newPos.bottom;\n        particle.initialPosition.y = particle.position.y;\n      }\n    }\n  }, {\n    key: \"bounce\",\n    value: function bounce(particle, delta, direction, outMode) {\n      var container = this.container;\n      var handled = false;\n      var _iterator = _createForOfIteratorHelper(container.plugins),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n            plugin = _step$value[1];\n          if (plugin.particleBounce !== undefined) {\n            handled = plugin.particleBounce(particle, delta, direction);\n          }\n          if (handled) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      if (handled) {\n        return;\n      }\n      var pos = particle.getPosition(),\n        offset = particle.offset,\n        size = particle.getRadius(),\n        bounds = (0, Utils_2.calculateBounds)(pos, size),\n        canvasSize = container.canvas.size;\n      (0, Utils_1.bounceHorizontal)({\n        particle: particle,\n        outMode: outMode,\n        direction: direction,\n        bounds: bounds,\n        canvasSize: canvasSize,\n        offset: offset,\n        size: size\n      });\n      (0, Utils_1.bounceVertical)({\n        particle: particle,\n        outMode: outMode,\n        direction: direction,\n        bounds: bounds,\n        canvasSize: canvasSize,\n        offset: offset,\n        size: size\n      });\n    }\n  }, {\n    key: \"none\",\n    value: function none(particle, direction) {\n      if (particle.options.move.distance.horizontal && (direction === \"left\" || direction === \"right\") || particle.options.move.distance.vertical && (direction === \"top\" || direction === \"bottom\")) {\n        return;\n      }\n      var gravityOptions = particle.options.move.gravity,\n        container = this.container;\n      var canvasSize = container.canvas.size;\n      var pRadius = particle.getRadius();\n      if (!gravityOptions.enable) {\n        if (particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius || particle.velocity.y < 0 && particle.position.y >= -pRadius || particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius || particle.velocity.x < 0 && particle.position.x >= -pRadius) {\n          return;\n        }\n        if (!(0, Utils_2.isPointInside)(particle.position, container.canvas.size, pRadius, direction)) {\n          container.particles.remove(particle);\n        }\n      } else {\n        var position = particle.position;\n        if (!gravityOptions.inverse && position.y > canvasSize.height + pRadius && direction === \"bottom\" || gravityOptions.inverse && position.y < -pRadius && direction === \"top\") {\n          container.particles.remove(particle);\n        }\n      }\n    }\n  }]);\n  return OutOfCanvasUpdater;\n}();\nexports.OutOfCanvasUpdater = OutOfCanvasUpdater;","map":{"version":3,"names":["Object","defineProperty","exports","value","OutOfCanvasUpdater","Utils_1","require","Utils_2","container","particle","destroyed","spawning","delta","_a","_b","_c","_d","outModes","options","move","updateOutMode","bottom","default","left","right","top","outMode","direction","bounce","destroy","out","none","isPointInside","position","canvas","size","getRadius","particles","remove","undefined","wrap","warp","canvasSize","newPos","height","offset","y","x","width","sizeValue","nextBounds","calculateBounds","initialPosition","Math","random","handled","plugins","plugin","particleBounce","pos","getPosition","bounds","bounceHorizontal","bounceVertical","distance","horizontal","vertical","gravityOptions","gravity","pRadius","enable","velocity","inverse"],"sources":["/home/michael/6-Projets perso/portfolioMB/node_modules/tsparticles/cjs/Updaters/OutModes/OutOfCanvasUpdater.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OutOfCanvasUpdater = void 0;\nconst Utils_1 = require(\"./Utils\");\nconst Utils_2 = require(\"../../Utils/Utils\");\nclass OutOfCanvasUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        var _a, _b, _c, _d;\n        const outModes = particle.options.move.outModes;\n        this.updateOutMode(particle, delta, (_a = outModes.bottom) !== null && _a !== void 0 ? _a : outModes.default, \"bottom\");\n        this.updateOutMode(particle, delta, (_b = outModes.left) !== null && _b !== void 0 ? _b : outModes.default, \"left\");\n        this.updateOutMode(particle, delta, (_c = outModes.right) !== null && _c !== void 0 ? _c : outModes.default, \"right\");\n        this.updateOutMode(particle, delta, (_d = outModes.top) !== null && _d !== void 0 ? _d : outModes.default, \"top\");\n    }\n    updateOutMode(particle, delta, outMode, direction) {\n        switch (outMode) {\n            case \"bounce\":\n            case \"bounce-vertical\":\n            case \"bounce-horizontal\":\n            case \"bounceVertical\":\n            case \"bounceHorizontal\":\n            case \"split\":\n                this.bounce(particle, delta, direction, outMode);\n                break;\n            case \"destroy\":\n                this.destroy(particle, direction);\n                break;\n            case \"out\":\n                this.out(particle, direction);\n                break;\n            case \"none\":\n            default:\n                this.none(particle, direction);\n                break;\n        }\n    }\n    destroy(particle, direction) {\n        const container = this.container;\n        if ((0, Utils_2.isPointInside)(particle.position, container.canvas.size, particle.getRadius(), direction)) {\n            return;\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n    out(particle, direction) {\n        const container = this.container;\n        if ((0, Utils_2.isPointInside)(particle.position, container.canvas.size, particle.getRadius(), direction)) {\n            return;\n        }\n        const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n            left: -particle.getRadius() - particle.offset.x,\n            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n            top: -particle.getRadius() - particle.offset.y,\n        }, sizeValue = particle.getRadius(), nextBounds = (0, Utils_2.calculateBounds)(particle.position, sizeValue);\n        if (direction === \"right\" && nextBounds.left > canvasSize.width + particle.offset.x) {\n            particle.position.x = newPos.left;\n            particle.initialPosition.x = particle.position.x;\n            if (!wrap) {\n                particle.position.y = Math.random() * canvasSize.height;\n                particle.initialPosition.y = particle.position.y;\n            }\n        }\n        else if (direction === \"left\" && nextBounds.right < -particle.offset.x) {\n            particle.position.x = newPos.right;\n            particle.initialPosition.x = particle.position.x;\n            if (!wrap) {\n                particle.position.y = Math.random() * canvasSize.height;\n                particle.initialPosition.y = particle.position.y;\n            }\n        }\n        if (direction === \"bottom\" && nextBounds.top > canvasSize.height + particle.offset.y) {\n            if (!wrap) {\n                particle.position.x = Math.random() * canvasSize.width;\n                particle.initialPosition.x = particle.position.x;\n            }\n            particle.position.y = newPos.top;\n            particle.initialPosition.y = particle.position.y;\n        }\n        else if (direction === \"top\" && nextBounds.bottom < -particle.offset.y) {\n            if (!wrap) {\n                particle.position.x = Math.random() * canvasSize.width;\n                particle.initialPosition.x = particle.position.x;\n            }\n            particle.position.y = newPos.bottom;\n            particle.initialPosition.y = particle.position.y;\n        }\n    }\n    bounce(particle, delta, direction, outMode) {\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = (0, Utils_2.calculateBounds)(pos, size), canvasSize = container.canvas.size;\n        (0, Utils_1.bounceHorizontal)({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        (0, Utils_1.bounceVertical)({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n    none(particle, direction) {\n        if ((particle.options.move.distance.horizontal &&\n            (direction === \"left\" || direction === \"right\")) ||\n            (particle.options.move.distance.vertical &&\n                (direction === \"top\" || direction === \"bottom\"))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container;\n        const canvasSize = container.canvas.size;\n        const pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < 0 && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < 0 && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!(0, Utils_2.isPointInside)(particle.position, container.canvas.size, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === \"bottom\") ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === \"top\")) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\nexports.OutOfCanvasUpdater = OutOfCanvasUpdater;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}