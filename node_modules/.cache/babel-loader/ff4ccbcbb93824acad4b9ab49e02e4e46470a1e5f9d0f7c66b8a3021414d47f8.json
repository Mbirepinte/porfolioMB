{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/home/michael/6-Projets perso/portfolioMB/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.segmentBounce = exports.calcClosestPtOnSegment = exports.parsePaths = exports.drawPolygonMaskPath = exports.drawPolygonMask = void 0;\nvar ColorUtils_1 = require(\"../../Utils/ColorUtils\");\nvar Vector_1 = require(\"../../Core/Utils/Vector\");\nvar NumberUtils_1 = require(\"../../Utils/NumberUtils\");\nfunction drawPolygonMask(context, rawData, stroke) {\n  var color = (0, ColorUtils_1.colorToRgb)(stroke.color);\n  if (!color) {\n    return;\n  }\n  context.beginPath();\n  context.moveTo(rawData[0].x, rawData[0].y);\n  var _iterator = _createForOfIteratorHelper(rawData),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var item = _step.value;\n      context.lineTo(item.x, item.y);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  context.closePath();\n  context.strokeStyle = (0, ColorUtils_1.getStyleFromRgb)(color);\n  context.lineWidth = stroke.width;\n  context.stroke();\n}\nexports.drawPolygonMask = drawPolygonMask;\nfunction drawPolygonMaskPath(context, path, stroke, position) {\n  context.translate(position.x, position.y);\n  var color = (0, ColorUtils_1.colorToRgb)(stroke.color);\n  if (!color) {\n    return;\n  }\n  context.strokeStyle = (0, ColorUtils_1.getStyleFromRgb)(color, stroke.opacity);\n  context.lineWidth = stroke.width;\n  context.stroke(path);\n}\nexports.drawPolygonMaskPath = drawPolygonMaskPath;\nfunction parsePaths(paths, scale, offset) {\n  var _a;\n  var res = [];\n  var _iterator2 = _createForOfIteratorHelper(paths),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var path = _step2.value;\n      var segments = path.element.pathSegList,\n        len = (_a = segments === null || segments === void 0 ? void 0 : segments.numberOfItems) !== null && _a !== void 0 ? _a : 0,\n        p = {\n          x: 0,\n          y: 0\n        };\n      for (var i = 0; i < len; i++) {\n        var segment = segments === null || segments === void 0 ? void 0 : segments.getItem(i);\n        var svgPathSeg = window.SVGPathSeg;\n        switch (segment === null || segment === void 0 ? void 0 : segment.pathSegType) {\n          case svgPathSeg.PATHSEG_MOVETO_ABS:\n          case svgPathSeg.PATHSEG_LINETO_ABS:\n          case svgPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n          case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n          case svgPathSeg.PATHSEG_ARC_ABS:\n          case svgPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n          case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:\n            {\n              var absSeg = segment;\n              p.x = absSeg.x;\n              p.y = absSeg.y;\n              break;\n            }\n          case svgPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n            p.x = segment.x;\n            break;\n          case svgPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n            p.y = segment.y;\n            break;\n          case svgPathSeg.PATHSEG_LINETO_REL:\n          case svgPathSeg.PATHSEG_MOVETO_REL:\n          case svgPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n          case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n          case svgPathSeg.PATHSEG_ARC_REL:\n          case svgPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n          case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:\n            {\n              var relSeg = segment;\n              p.x += relSeg.x;\n              p.y += relSeg.y;\n              break;\n            }\n          case svgPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n            p.x += segment.x;\n            break;\n          case svgPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n            p.y += segment.y;\n            break;\n          case svgPathSeg.PATHSEG_UNKNOWN:\n          case svgPathSeg.PATHSEG_CLOSEPATH:\n            continue;\n        }\n        res.push({\n          x: p.x * scale + offset.x,\n          y: p.y * scale + offset.y\n        });\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return res;\n}\nexports.parsePaths = parsePaths;\nfunction calcClosestPtOnSegment(s1, s2, pos) {\n  var _ref = (0, NumberUtils_1.getDistances)(pos, s1),\n    dx = _ref.dx,\n    dy = _ref.dy,\n    _ref2 = (0, NumberUtils_1.getDistances)(s2, s1),\n    dxx = _ref2.dx,\n    dyy = _ref2.dy,\n    t = (dx * dxx + dy * dyy) / (Math.pow(dxx, 2) + Math.pow(dyy, 2)),\n    res = {\n      x: s1.x + dxx * t,\n      y: s1.x + dyy * t,\n      isOnSegment: t >= 0 && t <= 1\n    };\n  if (t < 0) {\n    res.x = s1.x;\n    res.y = s1.y;\n  } else if (t > 1) {\n    res.x = s2.x;\n    res.y = s2.y;\n  }\n  return res;\n}\nexports.calcClosestPtOnSegment = calcClosestPtOnSegment;\nfunction segmentBounce(start, stop, velocity) {\n  var _ref3 = (0, NumberUtils_1.getDistances)(start, stop),\n    dx = _ref3.dx,\n    dy = _ref3.dy,\n    wallAngle = Math.atan2(dy, dx),\n    wallNormal = Vector_1.Vector.create(Math.sin(wallAngle), -Math.cos(wallAngle)),\n    d = 2 * (velocity.x * wallNormal.x + velocity.y * wallNormal.y);\n  wallNormal.multTo(d);\n  velocity.subFrom(wallNormal);\n}\nexports.segmentBounce = segmentBounce;","map":{"version":3,"names":["Object","defineProperty","exports","value","segmentBounce","calcClosestPtOnSegment","parsePaths","drawPolygonMaskPath","drawPolygonMask","ColorUtils_1","require","Vector_1","NumberUtils_1","context","rawData","stroke","color","colorToRgb","beginPath","moveTo","x","y","item","lineTo","closePath","strokeStyle","getStyleFromRgb","lineWidth","width","path","position","translate","opacity","paths","scale","offset","_a","res","segments","element","pathSegList","len","numberOfItems","p","i","segment","getItem","svgPathSeg","window","SVGPathSeg","pathSegType","PATHSEG_MOVETO_ABS","PATHSEG_LINETO_ABS","PATHSEG_CURVETO_CUBIC_ABS","PATHSEG_CURVETO_QUADRATIC_ABS","PATHSEG_ARC_ABS","PATHSEG_CURVETO_CUBIC_SMOOTH_ABS","PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS","absSeg","PATHSEG_LINETO_HORIZONTAL_ABS","PATHSEG_LINETO_VERTICAL_ABS","PATHSEG_LINETO_REL","PATHSEG_MOVETO_REL","PATHSEG_CURVETO_CUBIC_REL","PATHSEG_CURVETO_QUADRATIC_REL","PATHSEG_ARC_REL","PATHSEG_CURVETO_CUBIC_SMOOTH_REL","PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL","relSeg","PATHSEG_LINETO_HORIZONTAL_REL","PATHSEG_LINETO_VERTICAL_REL","PATHSEG_UNKNOWN","PATHSEG_CLOSEPATH","push","s1","s2","pos","getDistances","dx","dy","dxx","dyy","t","isOnSegment","start","stop","velocity","wallAngle","Math","atan2","wallNormal","Vector","create","sin","cos","d","multTo","subFrom"],"sources":["/home/michael/6-Projets perso/portfolioMB/node_modules/tsparticles/cjs/Plugins/PolygonMask/Utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.segmentBounce = exports.calcClosestPtOnSegment = exports.parsePaths = exports.drawPolygonMaskPath = exports.drawPolygonMask = void 0;\nconst ColorUtils_1 = require(\"../../Utils/ColorUtils\");\nconst Vector_1 = require(\"../../Core/Utils/Vector\");\nconst NumberUtils_1 = require(\"../../Utils/NumberUtils\");\nfunction drawPolygonMask(context, rawData, stroke) {\n    const color = (0, ColorUtils_1.colorToRgb)(stroke.color);\n    if (!color) {\n        return;\n    }\n    context.beginPath();\n    context.moveTo(rawData[0].x, rawData[0].y);\n    for (const item of rawData) {\n        context.lineTo(item.x, item.y);\n    }\n    context.closePath();\n    context.strokeStyle = (0, ColorUtils_1.getStyleFromRgb)(color);\n    context.lineWidth = stroke.width;\n    context.stroke();\n}\nexports.drawPolygonMask = drawPolygonMask;\nfunction drawPolygonMaskPath(context, path, stroke, position) {\n    context.translate(position.x, position.y);\n    const color = (0, ColorUtils_1.colorToRgb)(stroke.color);\n    if (!color) {\n        return;\n    }\n    context.strokeStyle = (0, ColorUtils_1.getStyleFromRgb)(color, stroke.opacity);\n    context.lineWidth = stroke.width;\n    context.stroke(path);\n}\nexports.drawPolygonMaskPath = drawPolygonMaskPath;\nfunction parsePaths(paths, scale, offset) {\n    var _a;\n    const res = [];\n    for (const path of paths) {\n        const segments = path.element.pathSegList, len = (_a = segments === null || segments === void 0 ? void 0 : segments.numberOfItems) !== null && _a !== void 0 ? _a : 0, p = {\n            x: 0,\n            y: 0,\n        };\n        for (let i = 0; i < len; i++) {\n            const segment = segments === null || segments === void 0 ? void 0 : segments.getItem(i);\n            const svgPathSeg = window.SVGPathSeg;\n            switch (segment === null || segment === void 0 ? void 0 : segment.pathSegType) {\n                case svgPathSeg.PATHSEG_MOVETO_ABS:\n                case svgPathSeg.PATHSEG_LINETO_ABS:\n                case svgPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n                case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n                case svgPathSeg.PATHSEG_ARC_ABS:\n                case svgPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n                case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS: {\n                    const absSeg = segment;\n                    p.x = absSeg.x;\n                    p.y = absSeg.y;\n                    break;\n                }\n                case svgPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n                    p.x = segment.x;\n                    break;\n                case svgPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n                    p.y = segment.y;\n                    break;\n                case svgPathSeg.PATHSEG_LINETO_REL:\n                case svgPathSeg.PATHSEG_MOVETO_REL:\n                case svgPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n                case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n                case svgPathSeg.PATHSEG_ARC_REL:\n                case svgPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n                case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL: {\n                    const relSeg = segment;\n                    p.x += relSeg.x;\n                    p.y += relSeg.y;\n                    break;\n                }\n                case svgPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n                    p.x += segment.x;\n                    break;\n                case svgPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n                    p.y += segment.y;\n                    break;\n                case svgPathSeg.PATHSEG_UNKNOWN:\n                case svgPathSeg.PATHSEG_CLOSEPATH:\n                    continue;\n            }\n            res.push({\n                x: p.x * scale + offset.x,\n                y: p.y * scale + offset.y,\n            });\n        }\n    }\n    return res;\n}\nexports.parsePaths = parsePaths;\nfunction calcClosestPtOnSegment(s1, s2, pos) {\n    const { dx, dy } = (0, NumberUtils_1.getDistances)(pos, s1), { dx: dxx, dy: dyy } = (0, NumberUtils_1.getDistances)(s2, s1), t = (dx * dxx + dy * dyy) / (dxx ** 2 + dyy ** 2), res = {\n        x: s1.x + dxx * t,\n        y: s1.x + dyy * t,\n        isOnSegment: t >= 0 && t <= 1,\n    };\n    if (t < 0) {\n        res.x = s1.x;\n        res.y = s1.y;\n    }\n    else if (t > 1) {\n        res.x = s2.x;\n        res.y = s2.y;\n    }\n    return res;\n}\nexports.calcClosestPtOnSegment = calcClosestPtOnSegment;\nfunction segmentBounce(start, stop, velocity) {\n    const { dx, dy } = (0, NumberUtils_1.getDistances)(start, stop), wallAngle = Math.atan2(dy, dx), wallNormal = Vector_1.Vector.create(Math.sin(wallAngle), -Math.cos(wallAngle)), d = 2 * (velocity.x * wallNormal.x + velocity.y * wallNormal.y);\n    wallNormal.multTo(d);\n    velocity.subFrom(wallNormal);\n}\nexports.segmentBounce = segmentBounce;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}