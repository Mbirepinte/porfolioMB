{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/michael/6-Projets perso/portfolioMB/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/home/michael/6-Projets perso/portfolioMB/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.replaceImageColor = exports.downloadSvgImage = exports.loadImage = void 0;\nvar ColorUtils_1 = require(\"../../Utils/ColorUtils\");\nvar currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n  var svgData = imageShape.svgData;\n  if (!svgData) {\n    return \"\";\n  }\n  var colorStyle = (0, ColorUtils_1.getStyleFromHsl)(color, opacity);\n  if (svgData.includes(\"fill\")) {\n    return svgData.replace(currentColorRegex, function () {\n      return colorStyle;\n    });\n  }\n  var preFillIndex = svgData.indexOf(\">\");\n  return \"\".concat(svgData.substring(0, preFillIndex), \" fill=\\\"\").concat(colorStyle, \"\\\"\").concat(svgData.substring(preFillIndex));\n}\nfunction loadImage(_x) {\n  return _loadImage.apply(this, arguments);\n}\nfunction _loadImage() {\n  _loadImage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(image) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", new Promise(function (resolve) {\n              image.loading = true;\n              var img = new Image();\n              img.addEventListener(\"load\", function () {\n                image.element = img;\n                image.loading = false;\n                resolve();\n              });\n              img.addEventListener(\"error\", function () {\n                image.error = true;\n                image.loading = false;\n                console.error(\"Error tsParticles - loading image: \".concat(image.source));\n                resolve();\n              });\n              img.src = image.source;\n            }));\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _loadImage.apply(this, arguments);\n}\nexports.loadImage = loadImage;\nfunction downloadSvgImage(_x2) {\n  return _downloadSvgImage.apply(this, arguments);\n}\nfunction _downloadSvgImage() {\n  _downloadSvgImage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(image) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(image.type !== \"svg\")) {\n              _context2.next = 4;\n              break;\n            }\n            _context2.next = 3;\n            return loadImage(image);\n          case 3:\n            return _context2.abrupt(\"return\");\n          case 4:\n            image.loading = true;\n            _context2.next = 7;\n            return fetch(image.source);\n          case 7:\n            response = _context2.sent;\n            image.loading = false;\n            if (!response.ok) {\n              console.error(\"Error tsParticles - Image not found\");\n              image.error = true;\n            }\n            if (image.error) {\n              _context2.next = 14;\n              break;\n            }\n            _context2.next = 13;\n            return response.text();\n          case 13:\n            image.svgData = _context2.sent;\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _downloadSvgImage.apply(this, arguments);\n}\nexports.downloadSvgImage = downloadSvgImage;\nfunction replaceImageColor(image, imageData, color, particle) {\n  var _a, _b, _c;\n  var svgColoredData = replaceColorSvg(image, color, (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1);\n  var svg = new Blob([svgColoredData], {\n    type: \"image/svg+xml\"\n  });\n  var domUrl = URL || window.URL || window.webkitURL || window;\n  var url = domUrl.createObjectURL(svg);\n  var img = new Image();\n  var imageRes = {\n    data: Object.assign(Object.assign({}, image), {\n      svgData: svgColoredData\n    }),\n    ratio: imageData.width / imageData.height,\n    replaceColor: (_c = imageData.replaceColor) !== null && _c !== void 0 ? _c : imageData.replace_color,\n    source: imageData.src\n  };\n  img.addEventListener(\"load\", function () {\n    var pImage = particle.image;\n    if (pImage) {\n      pImage.loaded = true;\n      image.element = img;\n    }\n    domUrl.revokeObjectURL(url);\n  });\n  img.addEventListener(\"error\", function () {\n    domUrl.revokeObjectURL(url);\n    var img2 = Object.assign(Object.assign({}, image), {\n      error: false,\n      loading: true\n    });\n    loadImage(img2).then(function () {\n      var pImage = particle.image;\n      if (pImage) {\n        image.element = img2.element;\n        pImage.loaded = true;\n      }\n    });\n  });\n  img.src = url;\n  return imageRes;\n}\nexports.replaceImageColor = replaceImageColor;","map":{"version":3,"names":["Object","defineProperty","exports","value","replaceImageColor","downloadSvgImage","loadImage","ColorUtils_1","require","currentColorRegex","replaceColorSvg","imageShape","color","opacity","svgData","colorStyle","getStyleFromHsl","includes","replace","preFillIndex","indexOf","substring","image","Promise","resolve","loading","img","Image","addEventListener","element","error","console","source","src","type","fetch","response","ok","text","imageData","particle","_a","_b","_c","svgColoredData","svg","Blob","domUrl","URL","window","webkitURL","url","createObjectURL","imageRes","data","assign","ratio","width","height","replaceColor","replace_color","pImage","loaded","revokeObjectURL","img2","then"],"sources":["/home/michael/6-Projets perso/portfolioMB/node_modules/tsparticles/cjs/Shapes/Image/Utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.replaceImageColor = exports.downloadSvgImage = exports.loadImage = void 0;\nconst ColorUtils_1 = require(\"../../Utils/ColorUtils\");\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = (0, ColorUtils_1.getStyleFromHsl)(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nasync function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        img.addEventListener(\"load\", () => {\n            image.element = img;\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.error = true;\n            image.loading = false;\n            console.error(`Error tsParticles - loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexports.loadImage = loadImage;\nasync function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    image.loading = false;\n    if (!response.ok) {\n        console.error(\"Error tsParticles - Image not found\");\n        image.error = true;\n    }\n    if (!image.error) {\n        image.svgData = await response.text();\n    }\n}\nexports.downloadSvgImage = downloadSvgImage;\nfunction replaceImageColor(image, imageData, color, particle) {\n    var _a, _b, _c;\n    const svgColoredData = replaceColorSvg(image, color, (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1);\n    const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" });\n    const domUrl = URL || window.URL || window.webkitURL || window;\n    const url = domUrl.createObjectURL(svg);\n    const img = new Image();\n    const imageRes = {\n        data: Object.assign(Object.assign({}, image), { svgData: svgColoredData }),\n        ratio: imageData.width / imageData.height,\n        replaceColor: (_c = imageData.replaceColor) !== null && _c !== void 0 ? _c : imageData.replace_color,\n        source: imageData.src,\n    };\n    img.addEventListener(\"load\", () => {\n        const pImage = particle.image;\n        if (pImage) {\n            pImage.loaded = true;\n            image.element = img;\n        }\n        domUrl.revokeObjectURL(url);\n    });\n    img.addEventListener(\"error\", () => {\n        domUrl.revokeObjectURL(url);\n        const img2 = Object.assign(Object.assign({}, image), { error: false, loading: true });\n        loadImage(img2).then(() => {\n            const pImage = particle.image;\n            if (pImage) {\n                image.element = img2.element;\n                pImage.loaded = true;\n            }\n        });\n    });\n    img.src = url;\n    return imageRes;\n}\nexports.replaceImageColor = replaceImageColor;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}