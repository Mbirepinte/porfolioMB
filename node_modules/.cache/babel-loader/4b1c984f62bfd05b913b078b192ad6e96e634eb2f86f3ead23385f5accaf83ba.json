{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/michael/6-Projets perso/portfolioMB/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _slicedToArray = require(\"/home/michael/6-Projets perso/portfolioMB/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"/home/michael/6-Projets perso/portfolioMB/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _asyncToGenerator = require(\"/home/michael/6-Projets perso/portfolioMB/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"/home/michael/6-Projets perso/portfolioMB/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/home/michael/6-Projets perso/portfolioMB/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Canvas = void 0;\nvar CanvasUtils_1 = require(\"../Utils/CanvasUtils\");\nvar ColorUtils_1 = require(\"../Utils/ColorUtils\");\nvar Constants_1 = require(\"./Utils/Constants\");\nvar Utils_1 = require(\"../Utils/Utils\");\nvar Canvas = /*#__PURE__*/function () {\n  function Canvas(container) {\n    _classCallCheck(this, Canvas);\n    this.container = container;\n    this.size = {\n      height: 0,\n      width: 0\n    };\n    this.context = null;\n    this.generatedCanvas = false;\n  }\n  _createClass(Canvas, [{\n    key: \"init\",\n    value: function init() {\n      this.resize();\n      this.initStyle();\n      this.initCover();\n      this.initTrail();\n      this.initBackground();\n      this.paint();\n    }\n  }, {\n    key: \"loadCanvas\",\n    value: function loadCanvas(canvas) {\n      var _a;\n      if (this.generatedCanvas) {\n        (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n      }\n      this.generatedCanvas = canvas.dataset && Constants_1.Constants.generatedAttribute in canvas.dataset ? canvas.dataset[Constants_1.Constants.generatedAttribute] === \"true\" : this.generatedCanvas;\n      this.element = canvas;\n      this.originalStyle = (0, Utils_1.deepExtend)({}, this.element.style);\n      this.size.height = canvas.offsetHeight;\n      this.size.width = canvas.offsetWidth;\n      this.context = this.element.getContext(\"2d\");\n      this.container.retina.init();\n      this.initBackground();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this = this;\n      var _a;\n      if (this.generatedCanvas) {\n        (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n      }\n      this.draw(function (ctx) {\n        (0, CanvasUtils_1.clear)(ctx, _this.size);\n      });\n    }\n  }, {\n    key: \"paint\",\n    value: function paint() {\n      var _this2 = this;\n      var options = this.container.actualOptions;\n      this.draw(function (ctx) {\n        if (options.backgroundMask.enable && options.backgroundMask.cover) {\n          (0, CanvasUtils_1.clear)(ctx, _this2.size);\n          _this2.paintBase(_this2.coverColorStyle);\n        } else {\n          _this2.paintBase();\n        }\n      });\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this3 = this;\n      var options = this.container.actualOptions,\n        trail = options.particles.move.trail;\n      if (options.backgroundMask.enable) {\n        this.paint();\n      } else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n        this.paintBase((0, ColorUtils_1.getStyleFromRgb)(this.trailFillColor, 1 / trail.length));\n      } else {\n        this.draw(function (ctx) {\n          (0, CanvasUtils_1.clear)(ctx, _this3.size);\n        });\n      }\n    }\n  }, {\n    key: \"windowResize\",\n    value: function () {\n      var _windowResize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var container, needsRefresh, _iterator, _step, _step$value, plugin;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.element) {\n                  _context.next = 2;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 2:\n                this.resize();\n                container = this.container, needsRefresh = container.updateActualOptions();\n                container.particles.setDensity();\n                _iterator = _createForOfIteratorHelper(container.plugins);\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    _step$value = _slicedToArray(_step.value, 2), plugin = _step$value[1];\n                    if (plugin.resize !== undefined) {\n                      plugin.resize();\n                    }\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n                if (!needsRefresh) {\n                  _context.next = 10;\n                  break;\n                }\n                _context.next = 10;\n                return container.refresh();\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function windowResize() {\n        return _windowResize.apply(this, arguments);\n      }\n      return windowResize;\n    }()\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      if (!this.element) {\n        return;\n      }\n      var container = this.container,\n        pxRatio = container.retina.pixelRatio,\n        size = container.canvas.size,\n        newSize = {\n          width: this.element.offsetWidth * pxRatio,\n          height: this.element.offsetHeight * pxRatio\n        };\n      if (newSize.height === size.height && newSize.width === size.width && newSize.height === this.element.height && newSize.width === this.element.width) {\n        return;\n      }\n      var oldSize = Object.assign({}, size);\n      this.element.width = size.width = this.element.offsetWidth * pxRatio;\n      this.element.height = size.height = this.element.offsetHeight * pxRatio;\n      if (this.container.started) {\n        this.resizeFactor = {\n          width: size.width / oldSize.width,\n          height: size.height / oldSize.height\n        };\n      }\n    }\n  }, {\n    key: \"drawConnectLine\",\n    value: function drawConnectLine(p1, p2) {\n      var _this4 = this;\n      this.draw(function (ctx) {\n        var _a;\n        var lineStyle = _this4.lineStyle(p1, p2);\n        if (!lineStyle) {\n          return;\n        }\n        var pos1 = p1.getPosition(),\n          pos2 = p2.getPosition();\n        (0, CanvasUtils_1.drawConnectLine)(ctx, (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : _this4.container.retina.linksWidth, lineStyle, pos1, pos2);\n      });\n    }\n  }, {\n    key: \"drawGrabLine\",\n    value: function drawGrabLine(particle, lineColor, opacity, mousePos) {\n      var container = this.container;\n      this.draw(function (ctx) {\n        var _a;\n        var beginPos = particle.getPosition();\n        (0, CanvasUtils_1.drawGrabLine)(ctx, (_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n      });\n    }\n  }, {\n    key: \"drawParticle\",\n    value: function drawParticle(particle, delta) {\n      var _this5 = this;\n      var _a, _b, _c, _d, _e, _f;\n      if (particle.spawning || particle.destroyed) {\n        return;\n      }\n      var radius = particle.getRadius();\n      if (radius <= 0) {\n        return;\n      }\n      var pfColor = particle.getFillColor(),\n        psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n      if (!pfColor && !psColor) {\n        return;\n      }\n      var _this$getPluginPartic = this.getPluginParticleColors(particle),\n        _this$getPluginPartic2 = _slicedToArray(_this$getPluginPartic, 2),\n        fColor = _this$getPluginPartic2[0],\n        sColor = _this$getPluginPartic2[1];\n      if (!fColor || !sColor) {\n        if (!fColor) {\n          fColor = pfColor ? pfColor : undefined;\n        }\n        if (!sColor) {\n          sColor = psColor ? psColor : undefined;\n        }\n      }\n      var options = this.container.actualOptions,\n        zIndexOptions = particle.options.zIndex,\n        zOpacityFactor = Math.pow(1 - particle.zIndexFactor, zIndexOptions.opacityRate),\n        opacity = (_d = (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1,\n        strokeOpacity = (_f = (_e = particle.stroke) === null || _e === void 0 ? void 0 : _e.opacity) !== null && _f !== void 0 ? _f : opacity,\n        zOpacity = opacity * zOpacityFactor,\n        zStrokeOpacity = strokeOpacity * zOpacityFactor;\n      var colorStyles = {\n        fill: fColor ? (0, ColorUtils_1.getStyleFromHsl)(fColor, zOpacity) : undefined\n      };\n      colorStyles.stroke = sColor ? (0, ColorUtils_1.getStyleFromHsl)(sColor, zStrokeOpacity) : colorStyles.fill;\n      this.draw(function (ctx) {\n        var zSizeFactor = Math.pow(1 - particle.zIndexFactor, zIndexOptions.sizeRate),\n          container = _this5.container;\n        var _iterator2 = _createForOfIteratorHelper(container.particles.updaters),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var updater = _step2.value;\n            if (updater.beforeDraw) {\n              updater.beforeDraw(particle);\n            }\n            if (updater.getColorStyles) {\n              var _updater$getColorStyl = updater.getColorStyles(particle, ctx, radius, zOpacity),\n                fill = _updater$getColorStyl.fill,\n                stroke = _updater$getColorStyl.stroke;\n              if (fill) {\n                colorStyles.fill = fill;\n              }\n              if (stroke) {\n                colorStyles.stroke = stroke;\n              }\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n        (0, CanvasUtils_1.drawParticle)(container, ctx, particle, delta, colorStyles, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow);\n        var _iterator3 = _createForOfIteratorHelper(container.particles.updaters),\n          _step3;\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var _updater = _step3.value;\n            if (_updater.afterDraw) {\n              _updater.afterDraw(particle);\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      });\n    }\n  }, {\n    key: \"drawPlugin\",\n    value: function drawPlugin(plugin, delta) {\n      this.draw(function (ctx) {\n        (0, CanvasUtils_1.drawPlugin)(ctx, plugin, delta);\n      });\n    }\n  }, {\n    key: \"drawParticlePlugin\",\n    value: function drawParticlePlugin(plugin, particle, delta) {\n      this.draw(function (ctx) {\n        (0, CanvasUtils_1.drawParticlePlugin)(ctx, plugin, particle, delta);\n      });\n    }\n  }, {\n    key: \"initBackground\",\n    value: function initBackground() {\n      var options = this.container.actualOptions,\n        background = options.background,\n        element = this.element,\n        elementStyle = element === null || element === void 0 ? void 0 : element.style;\n      if (!elementStyle) {\n        return;\n      }\n      if (background.color) {\n        var color = (0, ColorUtils_1.colorToRgb)(background.color);\n        elementStyle.backgroundColor = color ? (0, ColorUtils_1.getStyleFromRgb)(color, background.opacity) : \"\";\n      } else {\n        elementStyle.backgroundColor = \"\";\n      }\n      elementStyle.backgroundImage = background.image || \"\";\n      elementStyle.backgroundPosition = background.position || \"\";\n      elementStyle.backgroundRepeat = background.repeat || \"\";\n      elementStyle.backgroundSize = background.size || \"\";\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(cb) {\n      if (!this.context) {\n        return;\n      }\n      return cb(this.context);\n    }\n  }, {\n    key: \"initCover\",\n    value: function initCover() {\n      var options = this.container.actualOptions,\n        cover = options.backgroundMask.cover,\n        color = cover.color,\n        coverRgb = (0, ColorUtils_1.colorToRgb)(color);\n      if (coverRgb) {\n        var coverColor = {\n          r: coverRgb.r,\n          g: coverRgb.g,\n          b: coverRgb.b,\n          a: cover.opacity\n        };\n        this.coverColorStyle = (0, ColorUtils_1.getStyleFromRgb)(coverColor, coverColor.a);\n      }\n    }\n  }, {\n    key: \"initTrail\",\n    value: function initTrail() {\n      var options = this.container.actualOptions,\n        trail = options.particles.move.trail,\n        fillColor = (0, ColorUtils_1.colorToRgb)(trail.fillColor);\n      if (fillColor) {\n        var _trail = options.particles.move.trail;\n        this.trailFillColor = {\n          r: fillColor.r,\n          g: fillColor.g,\n          b: fillColor.b,\n          a: 1 / _trail.length\n        };\n      }\n    }\n  }, {\n    key: \"getPluginParticleColors\",\n    value: function getPluginParticleColors(particle) {\n      var fColor, sColor;\n      var _iterator4 = _createForOfIteratorHelper(this.container.plugins),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n            plugin = _step4$value[1];\n          if (!fColor && plugin.particleFillColor) {\n            fColor = (0, ColorUtils_1.colorToHsl)(plugin.particleFillColor(particle));\n          }\n          if (!sColor && plugin.particleStrokeColor) {\n            sColor = (0, ColorUtils_1.colorToHsl)(plugin.particleStrokeColor(particle));\n          }\n          if (fColor && sColor) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      return [fColor, sColor];\n    }\n  }, {\n    key: \"initStyle\",\n    value: function initStyle() {\n      var element = this.element,\n        options = this.container.actualOptions;\n      if (!element) {\n        return;\n      }\n      var originalStyle = this.originalStyle;\n      if (options.fullScreen.enable) {\n        this.originalStyle = (0, Utils_1.deepExtend)({}, element.style);\n        element.style.setProperty(\"position\", \"fixed\", \"important\");\n        element.style.setProperty(\"z-index\", options.fullScreen.zIndex.toString(10), \"important\");\n        element.style.setProperty(\"top\", \"0\", \"important\");\n        element.style.setProperty(\"left\", \"0\", \"important\");\n        element.style.setProperty(\"width\", \"100%\", \"important\");\n        element.style.setProperty(\"height\", \"100%\", \"important\");\n      } else if (originalStyle) {\n        element.style.position = originalStyle.position;\n        element.style.zIndex = originalStyle.zIndex;\n        element.style.top = originalStyle.top;\n        element.style.left = originalStyle.left;\n        element.style.width = originalStyle.width;\n        element.style.height = originalStyle.height;\n      }\n      for (var key in options.style) {\n        if (!key || !options.style) {\n          continue;\n        }\n        var value = options.style[key];\n        if (!value) {\n          continue;\n        }\n        element.style.setProperty(key, value, \"important\");\n      }\n    }\n  }, {\n    key: \"paintBase\",\n    value: function paintBase(baseColor) {\n      var _this6 = this;\n      this.draw(function (ctx) {\n        (0, CanvasUtils_1.paintBase)(ctx, _this6.size, baseColor);\n      });\n    }\n  }, {\n    key: \"lineStyle\",\n    value: function lineStyle(p1, p2) {\n      var _this7 = this;\n      return this.draw(function (ctx) {\n        var options = _this7.container.actualOptions,\n          connectOptions = options.interactivity.modes.connect;\n        return (0, CanvasUtils_1.gradient)(ctx, p1, p2, connectOptions.links.opacity);\n      });\n    }\n  }]);\n  return Canvas;\n}();\nexports.Canvas = Canvas;","map":{"version":3,"names":["Object","defineProperty","exports","value","Canvas","CanvasUtils_1","require","ColorUtils_1","Constants_1","Utils_1","container","size","height","width","context","generatedCanvas","resize","initStyle","initCover","initTrail","initBackground","paint","canvas","_a","element","remove","dataset","Constants","generatedAttribute","originalStyle","deepExtend","style","offsetHeight","offsetWidth","getContext","retina","init","draw","ctx","clear","options","actualOptions","backgroundMask","enable","cover","paintBase","coverColorStyle","trail","particles","move","length","trailFillColor","getStyleFromRgb","needsRefresh","updateActualOptions","setDensity","plugins","plugin","undefined","refresh","pxRatio","pixelRatio","newSize","oldSize","assign","started","resizeFactor","p1","p2","lineStyle","pos1","getPosition","pos2","drawConnectLine","linksWidth","particle","lineColor","opacity","mousePos","beginPos","drawGrabLine","delta","_b","_c","_d","_e","_f","spawning","destroyed","radius","getRadius","pfColor","getFillColor","psColor","getStrokeColor","getPluginParticleColors","fColor","sColor","zIndexOptions","zIndex","zOpacityFactor","zIndexFactor","opacityRate","bubble","strokeOpacity","stroke","zOpacity","zStrokeOpacity","colorStyles","fill","getStyleFromHsl","zSizeFactor","sizeRate","updaters","updater","beforeDraw","getColorStyles","drawParticle","composite","shadow","afterDraw","drawPlugin","drawParticlePlugin","background","elementStyle","color","colorToRgb","backgroundColor","backgroundImage","image","backgroundPosition","position","backgroundRepeat","repeat","backgroundSize","cb","coverRgb","coverColor","r","g","b","a","fillColor","particleFillColor","colorToHsl","particleStrokeColor","fullScreen","setProperty","toString","top","left","key","baseColor","connectOptions","interactivity","modes","connect","gradient","links"],"sources":["/home/michael/6-Projets perso/portfolioMB/node_modules/tsparticles/cjs/Core/Canvas.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Canvas = void 0;\nconst CanvasUtils_1 = require(\"../Utils/CanvasUtils\");\nconst ColorUtils_1 = require(\"../Utils/ColorUtils\");\nconst Constants_1 = require(\"./Utils/Constants\");\nconst Utils_1 = require(\"../Utils/Utils\");\nclass Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this.context = null;\n        this.generatedCanvas = false;\n    }\n    init() {\n        this.resize();\n        this.initStyle();\n        this.initCover();\n        this.initTrail();\n        this.initBackground();\n        this.paint();\n    }\n    loadCanvas(canvas) {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas =\n            canvas.dataset && Constants_1.Constants.generatedAttribute in canvas.dataset\n                ? canvas.dataset[Constants_1.Constants.generatedAttribute] === \"true\"\n                : this.generatedCanvas;\n        this.element = canvas;\n        this.originalStyle = (0, Utils_1.deepExtend)({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this.context = this.element.getContext(\"2d\");\n        this.container.retina.init();\n        this.initBackground();\n    }\n    destroy() {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.draw((ctx) => {\n            (0, CanvasUtils_1.clear)(ctx, this.size);\n        });\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                (0, CanvasUtils_1.clear)(ctx, this.size);\n                this.paintBase(this.coverColorStyle);\n            }\n            else {\n                this.paintBase();\n            }\n        });\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase((0, ColorUtils_1.getStyleFromRgb)(this.trailFillColor, 1 / trail.length));\n        }\n        else {\n            this.draw((ctx) => {\n                (0, CanvasUtils_1.clear)(ctx, this.size);\n            });\n        }\n    }\n    async windowResize() {\n        if (!this.element) {\n            return;\n        }\n        this.resize();\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.resize !== undefined) {\n                plugin.resize();\n            }\n        }\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return;\n        }\n        const oldSize = Object.assign({}, size);\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    drawConnectLine(p1, p2) {\n        this.draw((ctx) => {\n            var _a;\n            const lineStyle = this.lineStyle(p1, p2);\n            if (!lineStyle) {\n                return;\n            }\n            const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            (0, CanvasUtils_1.drawConnectLine)(ctx, (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n        });\n    }\n    drawGrabLine(particle, lineColor, opacity, mousePos) {\n        const container = this.container;\n        this.draw((ctx) => {\n            var _a;\n            const beginPos = particle.getPosition();\n            (0, CanvasUtils_1.drawGrabLine)(ctx, (_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n        });\n    }\n    drawParticle(particle, delta) {\n        var _a, _b, _c, _d, _e, _f;\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n        if (!pfColor && !psColor) {\n            return;\n        }\n        let [fColor, sColor] = this.getPluginParticleColors(particle);\n        if (!fColor || !sColor) {\n            if (!fColor) {\n                fColor = pfColor ? pfColor : undefined;\n            }\n            if (!sColor) {\n                sColor = psColor ? psColor : undefined;\n            }\n        }\n        const options = this.container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = (_d = (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1, strokeOpacity = (_f = (_e = particle.stroke) === null || _e === void 0 ? void 0 : _e.opacity) !== null && _f !== void 0 ? _f : opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor;\n        const colorStyles = {\n            fill: fColor ? (0, ColorUtils_1.getStyleFromHsl)(fColor, zOpacity) : undefined,\n        };\n        colorStyles.stroke = sColor ? (0, ColorUtils_1.getStyleFromHsl)(sColor, zStrokeOpacity) : colorStyles.fill;\n        this.draw((ctx) => {\n            const zSizeFactor = (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate, container = this.container;\n            for (const updater of container.particles.updaters) {\n                if (updater.beforeDraw) {\n                    updater.beforeDraw(particle);\n                }\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n            }\n            (0, CanvasUtils_1.drawParticle)(container, ctx, particle, delta, colorStyles, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow);\n            for (const updater of container.particles.updaters) {\n                if (updater.afterDraw) {\n                    updater.afterDraw(particle);\n                }\n            }\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => {\n            (0, CanvasUtils_1.drawPlugin)(ctx, plugin, delta);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => {\n            (0, CanvasUtils_1.drawParticlePlugin)(ctx, plugin, particle, delta);\n        });\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element, elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = (0, ColorUtils_1.colorToRgb)(background.color);\n            elementStyle.backgroundColor = color ? (0, ColorUtils_1.getStyleFromRgb)(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    draw(cb) {\n        if (!this.context) {\n            return;\n        }\n        return cb(this.context);\n    }\n    initCover() {\n        const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = (0, ColorUtils_1.colorToRgb)(color);\n        if (coverRgb) {\n            const coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n            this.coverColorStyle = (0, ColorUtils_1.getStyleFromRgb)(coverColor, coverColor.a);\n        }\n    }\n    initTrail() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, fillColor = (0, ColorUtils_1.colorToRgb)(trail.fillColor);\n        if (fillColor) {\n            const trail = options.particles.move.trail;\n            this.trailFillColor = {\n                r: fillColor.r,\n                g: fillColor.g,\n                b: fillColor.b,\n                a: 1 / trail.length,\n            };\n        }\n    }\n    getPluginParticleColors(particle) {\n        let fColor, sColor;\n        for (const [, plugin] of this.container.plugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = (0, ColorUtils_1.colorToHsl)(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = (0, ColorUtils_1.colorToHsl)(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        const originalStyle = this.originalStyle;\n        if (options.fullScreen.enable) {\n            this.originalStyle = (0, Utils_1.deepExtend)({}, element.style);\n            element.style.setProperty(\"position\", \"fixed\", \"important\");\n            element.style.setProperty(\"z-index\", options.fullScreen.zIndex.toString(10), \"important\");\n            element.style.setProperty(\"top\", \"0\", \"important\");\n            element.style.setProperty(\"left\", \"0\", \"important\");\n            element.style.setProperty(\"width\", \"100%\", \"important\");\n            element.style.setProperty(\"height\", \"100%\", \"important\");\n        }\n        else if (originalStyle) {\n            element.style.position = originalStyle.position;\n            element.style.zIndex = originalStyle.zIndex;\n            element.style.top = originalStyle.top;\n            element.style.left = originalStyle.left;\n            element.style.width = originalStyle.width;\n            element.style.height = originalStyle.height;\n        }\n        for (const key in options.style) {\n            if (!key || !options.style) {\n                continue;\n            }\n            const value = options.style[key];\n            if (!value) {\n                continue;\n            }\n            element.style.setProperty(key, value, \"important\");\n        }\n    }\n    paintBase(baseColor) {\n        this.draw((ctx) => {\n            (0, CanvasUtils_1.paintBase)(ctx, this.size, baseColor);\n        });\n    }\n    lineStyle(p1, p2) {\n        return this.draw((ctx) => {\n            const options = this.container.actualOptions, connectOptions = options.interactivity.modes.connect;\n            return (0, CanvasUtils_1.gradient)(ctx, p1, p2, connectOptions.links.opacity);\n        });\n    }\n}\nexports.Canvas = Canvas;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}