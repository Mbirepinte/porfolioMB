{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/michael/6-Projets perso/portfolioMB/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/home/michael/6-Projets perso/portfolioMB/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BaseMover = void 0;\nvar Utils_1 = require(\"./Utils\");\nvar NumberUtils_1 = require(\"../../Utils/NumberUtils\");\nvar BaseMover = /*#__PURE__*/function () {\n  function BaseMover() {\n    _classCallCheck(this, BaseMover);\n  }\n  _createClass(BaseMover, [{\n    key: \"init\",\n    value: function init(particle) {\n      var _a;\n      var container = particle.container,\n        options = particle.options,\n        spinOptions = options.move.spin;\n      if (spinOptions.enable) {\n        var spinPos = (_a = spinOptions.position) !== null && _a !== void 0 ? _a : {\n          x: 50,\n          y: 50\n        };\n        var spinCenter = {\n          x: spinPos.x / 100 * container.canvas.size.width,\n          y: spinPos.y / 100 * container.canvas.size.height\n        };\n        var pos = particle.getPosition();\n        var distance = (0, NumberUtils_1.getDistance)(pos, spinCenter);\n        var spinAcceleration = (0, NumberUtils_1.getRangeValue)(spinOptions.acceleration);\n        particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n        particle.spin = {\n          center: spinCenter,\n          direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n          angle: particle.velocity.angle,\n          radius: distance,\n          acceleration: particle.retina.spinAcceleration\n        };\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return !particle.destroyed && particle.options.move.enable;\n    }\n  }, {\n    key: \"move\",\n    value: function move(particle, delta) {\n      var _a, _b, _c;\n      var _d, _e;\n      var particleOptions = particle.options,\n        moveOptions = particleOptions.move;\n      if (!moveOptions.enable) {\n        return;\n      }\n      var container = particle.container,\n        slowFactor = (0, Utils_1.getProximitySpeedFactor)(particle),\n        baseSpeed = ((_a = (_d = particle.retina).moveSpeed) !== null && _a !== void 0 ? _a : _d.moveSpeed = (0, NumberUtils_1.getRangeValue)(moveOptions.speed) * container.retina.pixelRatio) * container.retina.reduceFactor,\n        moveDrift = (_b = (_e = particle.retina).moveDrift) !== null && _b !== void 0 ? _b : _e.moveDrift = (0, NumberUtils_1.getRangeValue)(particle.options.move.drift) * container.retina.pixelRatio,\n        maxSize = (0, NumberUtils_1.getRangeMax)(particleOptions.size.value) * container.retina.pixelRatio,\n        sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1,\n        speedFactor = sizeFactor * slowFactor * (delta.factor || 1),\n        diffFactor = 2,\n        moveSpeed = baseSpeed * speedFactor / diffFactor;\n      (0, Utils_1.applyPath)(particle, delta);\n      var gravityOptions = particle.gravity,\n        gravityFactor = gravityOptions.enable && gravityOptions.inverse ? -1 : 1;\n      if (gravityOptions.enable && moveSpeed) {\n        particle.velocity.y += gravityFactor * (gravityOptions.acceleration * delta.factor) / (60 * moveSpeed);\n      }\n      if (moveDrift && moveSpeed) {\n        particle.velocity.x += moveDrift * delta.factor / (60 * moveSpeed);\n      }\n      var decay = particle.moveDecay;\n      if (decay != 1) {\n        particle.velocity.multTo(decay);\n      }\n      var velocity = particle.velocity.mult(moveSpeed),\n        maxSpeed = (_c = particle.retina.maxSpeed) !== null && _c !== void 0 ? _c : container.retina.maxSpeed;\n      if (gravityOptions.enable && maxSpeed > 0 && (!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed || gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed)) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n          particle.velocity.y = velocity.y / moveSpeed;\n        }\n      }\n      var zIndexOptions = particle.options.zIndex,\n        zVelocityFactor = Math.pow(1 - particle.zIndexFactor, zIndexOptions.velocityRate);\n      if (moveOptions.spin.enable) {\n        (0, Utils_1.spin)(particle, moveSpeed);\n      } else {\n        if (zVelocityFactor != 1) {\n          velocity.multTo(zVelocityFactor);\n        }\n        particle.position.addTo(velocity);\n        if (moveOptions.vibrate) {\n          particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\n          particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\n        }\n      }\n      (0, Utils_1.applyDistance)(particle);\n    }\n  }]);\n  return BaseMover;\n}();\nexports.BaseMover = BaseMover;","map":{"version":3,"names":["Object","defineProperty","exports","value","BaseMover","Utils_1","require","NumberUtils_1","particle","_a","container","options","spinOptions","move","spin","enable","spinPos","position","x","y","spinCenter","canvas","size","width","height","pos","getPosition","distance","getDistance","spinAcceleration","getRangeValue","acceleration","retina","pixelRatio","center","direction","velocity","angle","radius","destroyed","delta","_b","_c","_d","_e","particleOptions","moveOptions","slowFactor","getProximitySpeedFactor","baseSpeed","moveSpeed","speed","reduceFactor","moveDrift","drift","maxSize","getRangeMax","sizeFactor","getRadius","speedFactor","factor","diffFactor","applyPath","gravityOptions","gravity","gravityFactor","inverse","decay","moveDecay","multTo","mult","maxSpeed","zIndexOptions","zIndex","zVelocityFactor","zIndexFactor","velocityRate","addTo","vibrate","Math","sin","cos","applyDistance"],"sources":["/home/michael/6-Projets perso/portfolioMB/node_modules/tsparticles/cjs/Movers/Base/BaseMover.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseMover = void 0;\nconst Utils_1 = require(\"./Utils\");\nconst NumberUtils_1 = require(\"../../Utils/NumberUtils\");\nclass BaseMover {\n    init(particle) {\n        var _a;\n        const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n        if (spinOptions.enable) {\n            const spinPos = (_a = spinOptions.position) !== null && _a !== void 0 ? _a : { x: 50, y: 50 };\n            const spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            };\n            const pos = particle.getPosition();\n            const distance = (0, NumberUtils_1.getDistance)(pos, spinCenter);\n            const spinAcceleration = (0, NumberUtils_1.getRangeValue)(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        var _a, _b, _c;\n        var _d, _e;\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, slowFactor = (0, Utils_1.getProximitySpeedFactor)(particle), baseSpeed = ((_a = (_d = particle.retina).moveSpeed) !== null && _a !== void 0 ? _a : (_d.moveSpeed = (0, NumberUtils_1.getRangeValue)(moveOptions.speed) * container.retina.pixelRatio)) *\n            container.retina.reduceFactor, moveDrift = ((_b = (_e = particle.retina).moveDrift) !== null && _b !== void 0 ? _b : (_e.moveDrift = (0, NumberUtils_1.getRangeValue)(particle.options.move.drift) * container.retina.pixelRatio)), maxSize = (0, NumberUtils_1.getRangeMax)(particleOptions.size.value) * container.retina.pixelRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, speedFactor = sizeFactor * slowFactor * (delta.factor || 1), diffFactor = 2, moveSpeed = (baseSpeed * speedFactor) / diffFactor;\n        (0, Utils_1.applyPath)(particle, delta);\n        const gravityOptions = particle.gravity, gravityFactor = gravityOptions.enable && gravityOptions.inverse ? -1 : 1;\n        if (gravityOptions.enable && moveSpeed) {\n            particle.velocity.y += (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n        }\n        if (moveDrift && moveSpeed) {\n            particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n        }\n        const decay = particle.moveDecay;\n        if (decay != 1) {\n            particle.velocity.multTo(decay);\n        }\n        const velocity = particle.velocity.mult(moveSpeed), maxSpeed = (_c = particle.retina.maxSpeed) !== null && _c !== void 0 ? _c : container.retina.maxSpeed;\n        if (gravityOptions.enable &&\n            maxSpeed > 0 &&\n            ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n                (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n            velocity.y = gravityFactor * maxSpeed;\n            if (moveSpeed) {\n                particle.velocity.y = velocity.y / moveSpeed;\n            }\n        }\n        const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n        if (moveOptions.spin.enable) {\n            (0, Utils_1.spin)(particle, moveSpeed);\n        }\n        else {\n            if (zVelocityFactor != 1) {\n                velocity.multTo(zVelocityFactor);\n            }\n            particle.position.addTo(velocity);\n            if (moveOptions.vibrate) {\n                particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\n                particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\n            }\n        }\n        (0, Utils_1.applyDistance)(particle);\n    }\n}\nexports.BaseMover = BaseMover;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}